{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sowmya\\\\Documents\\\\capestone\\\\src\\\\components\\\\paymentgateway..js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport './';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DummyPaymentGateway = () => {\n  _s();\n  const [paymentInProgress, setPaymentInProgress] = useState(false);\n  const [paymentSuccess, setPaymentSuccess] = useState(false);\n  const [paymentError, setPaymentError] = useState(false);\n  const [searchParams] = useSearchParams();\n  const email = searchParams.get(\"name\") || '';\n  const tcost = searchParams.get(\"cost\") || '';\n  const quantity = searchParams.get(\"quantity\") || '';\n  const product = searchParams.get(\"medicinename\") || '';\n  const [address, setAddress] = useState('');\n  const [error, setError] = useState('');\n  const handlePaymentSubmit = async e => {\n    e.preventDefault();\n    const formData = {\n      email,\n      tcost,\n      quantity,\n      product,\n      address\n    };\n    try {\n      const response = await fetch('http://localhost:8080/api/purchase', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n      if (response.ok) {\n        // Registration successful\n        setPaymentInProgress(true);\n        setTimeout(() => {\n          const paymentSuccess = Math.random() < 0.8; // Simulate 80% success rate\n\n          setPaymentInProgress(false);\n          if (paymentSuccess) {\n            setPaymentSuccess(true);\n          } else {\n            setPaymentError(true);\n          }\n        }, 2000); // Simulate a 2-second delay\n\n        // Reset form fields\n        setAddress('');\n        setError('');\n      } else {\n        const data = await response.json();\n        throw new Error(data.message);\n      }\n    } catch (error) {\n      setError(error.message);\n      console.log('Registration Error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Payment Gateway\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Name: \", product]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Total Cost: \", tcost]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), paymentSuccess ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"payment-success\",\n      children: \"Payment Successful!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handlePaymentSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Card Number:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Expiry Date:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"CVV:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Billing Address:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: address,\n          onChange: e => setAddress(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Pay Now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this), paymentInProgress && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"payment-progress\",\n      children: \"Processing Payment...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 29\n    }, this), paymentError && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"payment-error\",\n      children: \"Payment Error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 24\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(DummyPaymentGateway, \"u0A9/j3UOllDvMn0Hvp3jWYYDAU=\", false, function () {\n  return [useSearchParams];\n});\n_c = DummyPaymentGateway;\nexport default DummyPaymentGateway;\nvar _c;\n$RefreshReg$(_c, \"DummyPaymentGateway\");","map":{"version":3,"names":["React","useState","useSearchParams","jsxDEV","_jsxDEV","DummyPaymentGateway","_s","paymentInProgress","setPaymentInProgress","paymentSuccess","setPaymentSuccess","paymentError","setPaymentError","searchParams","email","get","tcost","quantity","product","address","setAddress","error","setError","handlePaymentSubmit","e","preventDefault","formData","response","fetch","method","headers","body","JSON","stringify","ok","setTimeout","Math","random","data","json","Error","message","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","type","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/sowmya/Documents/capestone/src/components/paymentgateway..js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useSearchParams } from 'react-router-dom';\r\nimport './'\r\n\r\nconst DummyPaymentGateway = () => {\r\n  const [paymentInProgress, setPaymentInProgress] = useState(false);\r\n  const [paymentSuccess, setPaymentSuccess] = useState(false);\r\n  const [paymentError, setPaymentError] = useState(false);\r\n  const [searchParams] = useSearchParams();\r\n\r\n  const email = searchParams.get(\"name\") || '';\r\n  const tcost = searchParams.get(\"cost\") || '';\r\n  const quantity = searchParams.get(\"quantity\") || '';\r\n  const product = searchParams.get(\"medicinename\") || '';\r\n  const [address, setAddress] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  const handlePaymentSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const formData = {\r\n      email,\r\n      tcost,\r\n      quantity,\r\n      product,\r\n      address\r\n    };\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:8080/api/purchase', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(formData),\r\n      });\r\n\r\n      if (response.ok) {\r\n        // Registration successful\r\n        setPaymentInProgress(true);\r\n        setTimeout(() => {\r\n          const paymentSuccess = Math.random() < 0.8; // Simulate 80% success rate\r\n\r\n          setPaymentInProgress(false);\r\n          if (paymentSuccess) {\r\n            setPaymentSuccess(true);\r\n          } else {\r\n            setPaymentError(true);\r\n          }\r\n        }, 2000); // Simulate a 2-second delay\r\n\r\n        // Reset form fields\r\n        setAddress('');\r\n        setError('');\r\n      } else {\r\n        const data = await response.json();\r\n        throw new Error(data.message);\r\n      }\r\n    } catch (error) {\r\n      setError(error.message);\r\n      console.log('Registration Error:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Payment Gateway</h2>\r\n      <p>Name: {product}</p>\r\n      <p>Total Cost: {tcost}</p>\r\n\r\n      {paymentSuccess ? (\r\n        <div className=\"payment-success\">Payment Successful!</div>\r\n      ) : (\r\n        <form onSubmit={handlePaymentSubmit}>\r\n          <label>\r\n            Card Number:\r\n            <input type=\"text\" />\r\n          </label>\r\n          <label>\r\n            Expiry Date:\r\n            <input type=\"text\" />\r\n          </label>\r\n          <label>\r\n            CVV:\r\n            <input type=\"text\" />\r\n          </label>\r\n          <label>\r\n            Billing Address:\r\n            <input type=\"text\" value={address} onChange={(e) => setAddress(e.target.value)} />\r\n          </label>\r\n\r\n          <br />\r\n          <button type=\"submit\">Pay Now</button>\r\n        </form>\r\n      )}\r\n\r\n      {paymentInProgress && <div className=\"payment-progress\">Processing Payment...</div>}\r\n      {paymentError && <div className=\"payment-error\">Payment Error</div>}\r\n      {error && <div className=\"error-message\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DummyPaymentGateway;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sowmya\\\\Documents\\\\capstone project\\\\capestone\\\\src\\\\App.js\";\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport LoginForm from './components/login';\nimport RegistrationForm from './components/register';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  const handleLogin = formData => {\n    return new Promise((resolve, reject) => {\n      // Make the API request for user login and handle the response\n      fetch('/api/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      }).then(response => {\n        if (response.ok) {\n          // Login successful\n          resolve();\n        } else {\n          return response.json().then(data => {\n            throw new Error(data.message);\n          });\n        }\n      }).catch(error => {\n        reject(error);\n      });\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/register\",\n        component: RegistrationForm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        render: () => /*#__PURE__*/_jsxDEV(LoginForm, {\n          handleLogin: handleLogin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Switch","Route","LoginForm","RegistrationForm","jsxDEV","_jsxDEV","App","handleLogin","formData","Promise","resolve","reject","fetch","method","headers","body","JSON","stringify","then","response","ok","json","data","Error","message","catch","error","children","path","component","fileName","_jsxFileName","lineNumber","columnNumber","render","_c","$RefreshReg$"],"sources":["C:/Users/sowmya/Documents/capstone project/capestone/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\n\n\nimport LoginForm from './components/login';\nimport RegistrationForm from './components/register';\n\nconst App = () => {\n  const handleLogin = (formData) => {\n    return new Promise((resolve, reject) => {\n      // Make the API request for user login and handle the response\n      fetch('/api/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(formData),\n      })\n        .then((response) => {\n          if (response.ok) {\n            // Login successful\n            resolve();\n          } else {\n            return response.json().then((data) => {\n              throw new Error(data.message);\n            });\n          }\n        })\n        .catch((error) => {\n          reject(error);\n        });\n    });\n  };\n\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/register\" component={RegistrationForm} />\n        <Route\n          path=\"/login\"\n          render={() => <LoginForm handleLogin={handleLogin} />}\n        />\n      </Switch>\n    </Router>\n  );\n};\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,aAAa,IAAIC,MAAM,EAAEC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AAIzE,OAAOC,SAAS,MAAM,oBAAoB;AAC1C,OAAOC,gBAAgB,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAChB,MAAMC,WAAW,GAAIC,QAAQ,IAAK;IAChC,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MACtC;MACAC,KAAK,CAAC,YAAY,EAAE;QAClBC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACT,QAAQ;MAC/B,CAAC,CAAC,CACCU,IAAI,CAAEC,QAAQ,IAAK;QAClB,IAAIA,QAAQ,CAACC,EAAE,EAAE;UACf;UACAV,OAAO,CAAC,CAAC;QACX,CAAC,MAAM;UACL,OAAOS,QAAQ,CAACE,IAAI,CAAC,CAAC,CAACH,IAAI,CAAEI,IAAI,IAAK;YACpC,MAAM,IAAIC,KAAK,CAACD,IAAI,CAACE,OAAO,CAAC;UAC/B,CAAC,CAAC;QACJ;MACF,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;QAChBf,MAAM,CAACe,KAAK,CAAC;MACf,CAAC,CAAC;IACN,CAAC,CAAC;EACJ,CAAC;EAED,oBACErB,OAAA,CAACN,MAAM;IAAA4B,QAAA,eACLtB,OAAA,CAACL,MAAM;MAAA2B,QAAA,gBACLtB,OAAA,CAACJ,KAAK;QAAC2B,IAAI,EAAC,WAAW;QAACC,SAAS,EAAE1B;MAAiB;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACvD5B,OAAA,CAACJ,KAAK;QACJ2B,IAAI,EAAC,QAAQ;QACbM,MAAM,EAAEA,CAAA,kBAAM7B,OAAA,CAACH,SAAS;UAACK,WAAW,EAAEA;QAAY;UAAAuB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEb,CAAC;AAACE,EAAA,GAtCI7B,GAAG;AAwCT,eAAeA,GAAG;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
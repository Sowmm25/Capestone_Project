{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sowmya\\\\Documents\\\\capestone\\\\src\\\\components\\\\adminlogin.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useNavigate } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminLogin = () => {\n  _s();\n  const history = useHistory();\n  const nav = useNavigate();\n  const handleLogin = () => {\n    const username = window.prompt('Enter username:');\n    const password = window.prompt('Enter password:');\n\n    // Check if the entered username and password are correct\n    const isValid = checkCredentials(username, password);\n    if (isValid) {\n      nav(\"/medicinepage\");\n    } else {\n      alert('Invalid username or password');\n    }\n  };\n  const checkCredentials = (username, password) => {\n    // Replace with your own validation logic\n    return username === 'admin' && password === 'admin123';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"username\",\n          value: username,\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleLogin,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 1\n  }, this);\n};\n_s(AdminLogin, \"qs7G5rfudVF8jJEVjONfn+t3vgU=\", false, function () {\n  return [useHistory, useNavigate];\n});\n_c = AdminLogin;\nexport default AdminLogin;\nvar _c;\n$RefreshReg$(_c, \"AdminLogin\");","map":{"version":3,"names":["React","useHistory","useNavigate","jsxDEV","_jsxDEV","AdminLogin","_s","history","nav","handleLogin","username","window","prompt","password","isValid","checkCredentials","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","value","onChange","e","setUsername","target","setPassword","onClick","_c","$RefreshReg$"],"sources":["C:/Users/sowmya/Documents/capestone/src/components/adminlogin.js"],"sourcesContent":["import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useNavigate } from 'react-router';\r\n\r\n\r\nconst AdminLogin= () => {\r\n  const history = useHistory();\r\n  const nav=useNavigate();\r\n\r\n  const handleLogin = () => {\r\n    const username = window.prompt('Enter username:');\r\n    const password = window.prompt('Enter password:');\r\n\r\n    // Check if the entered username and password are correct\r\n    const isValid = checkCredentials(username, password);\r\n\r\n    if (isValid) {\r\n      nav(\"/medicinepage\")\r\n    } else {\r\n      alert('Invalid username or password');\r\n    }\r\n  };\r\n\r\n  const checkCredentials = (username, password) => {\r\n    // Replace with your own validation logic\r\n    return username === 'admin' && password === 'admin123';\r\n  };\r\n\r\n  return (\r\n<div>\r\n      <h2>Login</h2>\r\n      <form>\r\n        <div>\r\n          <label htmlFor=\"username\">Username:</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"username\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"password\">Password:</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </div>\r\n        <button type=\"button\" onClick={handleLogin}>\r\n          Login\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default AdminLogin;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,SAASC,WAAW,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG3C,MAAMC,UAAU,GAAEA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAMC,OAAO,GAAGN,UAAU,CAAC,CAAC;EAC5B,MAAMO,GAAG,GAACN,WAAW,CAAC,CAAC;EAEvB,MAAMO,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMC,QAAQ,GAAGC,MAAM,CAACC,MAAM,CAAC,iBAAiB,CAAC;IACjD,MAAMC,QAAQ,GAAGF,MAAM,CAACC,MAAM,CAAC,iBAAiB,CAAC;;IAEjD;IACA,MAAME,OAAO,GAAGC,gBAAgB,CAACL,QAAQ,EAAEG,QAAQ,CAAC;IAEpD,IAAIC,OAAO,EAAE;MACXN,GAAG,CAAC,eAAe,CAAC;IACtB,CAAC,MAAM;MACLQ,KAAK,CAAC,8BAA8B,CAAC;IACvC;EACF,CAAC;EAED,MAAMD,gBAAgB,GAAGA,CAACL,QAAQ,EAAEG,QAAQ,KAAK;IAC/C;IACA,OAAOH,QAAQ,KAAK,OAAO,IAAIG,QAAQ,KAAK,UAAU;EACxD,CAAC;EAED,oBACFT,OAAA;IAAAa,QAAA,gBACMb,OAAA;MAAAa,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACdjB,OAAA;MAAAa,QAAA,gBACEb,OAAA;QAAAa,QAAA,gBACEb,OAAA;UAAOkB,OAAO,EAAC,UAAU;UAAAL,QAAA,EAAC;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC3CjB,OAAA;UACEmB,IAAI,EAAC,MAAM;UACXC,EAAE,EAAC,UAAU;UACbC,KAAK,EAAEf,QAAS;UAChBgB,QAAQ,EAAGC,CAAC,IAAKC,WAAW,CAACD,CAAC,CAACE,MAAM,CAACJ,KAAK;QAAE;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNjB,OAAA;QAAAa,QAAA,gBACEb,OAAA;UAAOkB,OAAO,EAAC,UAAU;UAAAL,QAAA,EAAC;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC3CjB,OAAA;UACEmB,IAAI,EAAC,UAAU;UACfC,EAAE,EAAC,UAAU;UACbC,KAAK,EAAEZ,QAAS;UAChBa,QAAQ,EAAGC,CAAC,IAAKG,WAAW,CAACH,CAAC,CAACE,MAAM,CAACJ,KAAK;QAAE;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNjB,OAAA;QAAQmB,IAAI,EAAC,QAAQ;QAACQ,OAAO,EAAEtB,WAAY;QAAAQ,QAAA,EAAC;MAE5C;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACf,EAAA,CAnDID,UAAU;EAAA,QACEJ,UAAU,EAChBC,WAAW;AAAA;AAAA8B,EAAA,GAFjB3B,UAAU;AAsDhB,eAAeA,UAAU;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
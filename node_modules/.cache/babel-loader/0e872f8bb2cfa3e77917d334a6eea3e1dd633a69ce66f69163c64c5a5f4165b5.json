{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sowmya\\\\Documents\\\\capestone\\\\src\\\\components\\\\paymentgateway..js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useLocation, useSearchParams, createSearchParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DummyPaymentGateway = _ref => {\n  _s();\n  let {\n    onPaymentComplete\n  } = _ref;\n  const [paymentInProgress, setPaymentInProgress] = useState(false);\n  const [paymentSuccess, setPaymentSuccess] = useState(false);\n  const [paymentError, setPaymentError] = useState(false);\n  const [searchparams] = useSearchParams();\n  const [email, setEmail] = new URLSearchParams(window.location.search).get(\"name\");\n  const [cost, setCost] = new URLSearchParams(window.location.search).get(\"totalcost\");\n  const [quantity, setQuantity] = new URLSearchParams(window.location.search).get(\"quantity\");\n  const [product, setProduct] = new URLSearchParams(window.location.search).get(\"medicinename\");\n  const [Billing_Address, setAddress] = useState('');\n  const handlePaymentSubmit = async e => {\n    e.preventDefault();\n    setPaymentInProgress(true);\n    setTimeout(() => {\n      const paymentSuccess = Math.random() < 0.8; // Simulate 80% success rate\n\n      setPaymentInProgress(false);\n      if (paymentSuccess) {\n        setPaymentSuccess(true);\n        onPaymentComplete(); // Invoke the callback function to handle payment completion\n      } else {\n        setPaymentError(true);\n      }\n    }, 2000); // Simulate a 2-second delay\n\n    const formData = {\n      email,\n      cost,\n      quantity,\n      product,\n      Billing_Address\n    };\n    try {\n      const response = await fetch('http://127.0.0.1:8080/api/users/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n      if (response.ok) {\n        // Registration successful\n        setName('');\n        setLastName('');\n        setPlace('');\n        setEmail('');\n        setPassword('');\n        setError('');\n        // Add your desired logic here (e.g., redirect to login page)\n      } else {\n        const data = await response.json();\n        throw new Error(data.message);\n      }\n    } catch (error) {\n      setError(error.message);\n      console.log('Registration Error:', error);\n    }\n  };\n};\n_s(DummyPaymentGateway, \"22gQ3apXvqITtr9qhcueQs339Qk=\", false, function () {\n  return [useSearchParams];\n});\n_c = DummyPaymentGateway;\nconst handlePaymentSubmit = e => {\n  e.preventDefault();\n\n  // Simulate payment processing\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Payment Gateway\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), \"nn:\", searchparams.get(\"name\"), \"mm:\", searchparams.get(\"medicinename\"), \"qq:\", searchparams.get(\"quantity\"), \"cc:\", searchparams.get(\"cost\"), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handlePaymentSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Card Number:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Expiry Date:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"CVV:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Billing Address:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: paymentInProgress,\n        children: paymentInProgress ? 'Processing...' : 'Pay Now'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), paymentSuccess && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Payment successful!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 26\n    }, this), paymentError && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Payment failed. Please try again.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\nexport default DummyPaymentGateway;\nvar _c;\n$RefreshReg$(_c, \"DummyPaymentGateway\");","map":{"version":3,"names":["React","useState","useLocation","useSearchParams","createSearchParams","jsxDEV","_jsxDEV","DummyPaymentGateway","_ref","_s","onPaymentComplete","paymentInProgress","setPaymentInProgress","paymentSuccess","setPaymentSuccess","paymentError","setPaymentError","searchparams","email","setEmail","URLSearchParams","window","location","search","get","cost","setCost","quantity","setQuantity","product","setProduct","Billing_Address","setAddress","handlePaymentSubmit","e","preventDefault","setTimeout","Math","random","formData","response","fetch","method","headers","body","JSON","stringify","ok","setName","setLastName","setPlace","setPassword","setError","data","json","Error","message","error","console","log","_c","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","disabled","$RefreshReg$"],"sources":["C:/Users/sowmya/Documents/capestone/src/components/paymentgateway..js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useLocation,useSearchParams,createSearchParams  } from 'react-router-dom';\r\n\r\nconst DummyPaymentGateway = ({ onPaymentComplete }) => {\r\n  const [paymentInProgress, setPaymentInProgress] = useState(false);\r\n  const [paymentSuccess, setPaymentSuccess] = useState(false);\r\n  const [paymentError, setPaymentError] = useState(false);\r\n  const [searchparams]=useSearchParams();\r\n  const [email, setEmail] = new URLSearchParams(window.location.search).get(\"name\");\r\n  const [cost,setCost]=new URLSearchParams(window.location.search).get(\"totalcost\");\r\n  const [quantity,setQuantity]=new URLSearchParams(window.location.search).get(\"quantity\");\r\n  const [product, setProduct]=new URLSearchParams(window.location.search).get(\"medicinename\");\r\n  const [Billing_Address, setAddress] = useState('');\r\n  const handlePaymentSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setPaymentInProgress(true);\r\n    setTimeout(() => {\r\n      const paymentSuccess = Math.random() < 0.8; // Simulate 80% success rate\r\n\r\n      setPaymentInProgress(false);\r\n      if (paymentSuccess) {\r\n        setPaymentSuccess(true);\r\n        onPaymentComplete(); // Invoke the callback function to handle payment completion\r\n      } else {\r\n        setPaymentError(true);\r\n      }\r\n    }, 2000); // Simulate a 2-second delay\r\n  \r\n  const formData = {\r\n    email,\r\n    cost,\r\n  quantity,\r\nproduct,\r\nBilling_Address\r\n  \r\n};\r\n\r\ntry {\r\n  const response = await fetch('http://127.0.0.1:8080/api/users/register', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(formData),\r\n  });\r\n\r\n  if (response.ok) {\r\n    // Registration successful\r\n    setName('');\r\n    setLastName('');\r\n    setPlace('');\r\n    setEmail('');\r\n    setPassword('');\r\n    \r\n    setError('');\r\n    // Add your desired logic here (e.g., redirect to login page)\r\n  } else {\r\n    const data = await response.json();\r\n    throw new Error(data.message);\r\n  }\r\n} catch (error) {\r\n  setError(error.message);\r\n  console.log('Registration Error:', error);\r\n}\r\n};\r\n}\r\n\r\n\r\n  const handlePaymentSubmit = (e) => {\r\n    e.preventDefault();\r\n    \r\n\r\n    // Simulate payment processing\r\n    \r\n\r\n  return (\r\n    <div>\r\n      <h2>Payment Gateway</h2>\r\n      nn:{searchparams.get(\"name\")}\r\n      mm:{searchparams.get(\"medicinename\")}\r\n      qq:{searchparams.get(\"quantity\")}\r\n      cc:{searchparams.get(\"cost\")}\r\n      <form onSubmit={handlePaymentSubmit}>\r\n        <label>\r\n          Card Number:\r\n          <input type=\"text\" />\r\n        </label>\r\n        <label>\r\n          Expiry Date:\r\n          <input type=\"text\" />\r\n        </label>\r\n        <label>\r\n          CVV:\r\n          <input type=\"text\" />\r\n        </label>\r\n        <label>\r\n          Billing Address:\r\n          <input type=\"text\" />\r\n        </label>\r\n        <button type=\"submit\" disabled={paymentInProgress}>\r\n          {paymentInProgress ? 'Processing...' : 'Pay Now'}\r\n        </button>\r\n      </form>\r\n      {paymentSuccess && <p>Payment successful!</p>}\r\n      {paymentError && <p>Payment failed. Please try again.</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DummyPaymentGateway;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}